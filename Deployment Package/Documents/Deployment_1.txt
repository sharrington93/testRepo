What:
    The goal is to deploy the first iteration of the simulation programming in a way others can use it.

    1) Figure out the best way to compile the scripts in such a way other can use them without having to download a bunch of python, or if they did it is automatic. First share your findings and then we will decide.
   
    2) Create a tutorial document of how to use the software. Does not need to be "pretty" but needs to be informative enough. I can help with this too

    3) Test deployment, we will find a few people to deploy this to and have them give ideas and fixes before deploying to the full team. This will use the decided compilation procedure decided in 1. This will also go to Aaron and Polina so they can start their testing

    4) Team deployment, give to whole team! Show off your amazing work! (I would to include Marcello, Rizzoni, etc in this deployment to show off your skillz)

Resources:
    What you find(plz share)

Due date:
    Team deployment by school starts, but the test deployment will  have to be done by the 12 to give Polina and Aaron time to do their research with the tool


I've made good progress with this already so I will go ahead and share what I have:

I believe 100% that the best way to compile the scripts is to make an executable for Windows, Mac, and Linux that will run independently and not require the end user to have Python on his/her system at all.  This is because there are only a handful of team members who will actually use Python.  Getting this script working if Python is required becomes at least twice as difficult because there are just so many more steps that need to be performed to get the script running.  Not only that, but Python(x,y) is a pretty large program (at least 900 MB) just to having sitting on a hard drive.

Benefits of running scripts as a single executable:

    User only has to keep track of two things:  The folder with in files and the executable.
    Python not required on users machine.  All required Python components built into exe (I have tested and proven this works on another local Windows machine without Python)
    Easy to distribute to the entire team
    Takes up less hard drive space when Python isn't required (Over 850 MB)
    Easy to update the executable so it's running most recent code

Cons of running scripts as a single executable:

    Executable's size is around 30-40 MB.  Takes longer to upload and download. C
    I can't make executable for Linux and Mac unless I get access to computers with these OS.  I however can walk someone who has one through the progress (Requires Python to make the executable)

I sent you a teaser of the executable earlier. I found out the max attachment size is 10 MB.  I'm putting the link to the real deal at the end of this email.  If we both agree the code is up to spec at this moment, this executable could be sent out for more testing.  Attaching what I have of the tutorial as of right now.  It should be enough to get things running. 

I especially want to get into contact with team members who have a Mac and possibly team members who use Linux if that's in demand.

I should say I had to make 2 line changes in both Automation.py and Simulation.py.  These lines basically import a hidden module that the executable wasn't importing for some reason.  I'll attach these revisions. 

Link to the Buckeye Current Simulation.exe: https://docs.google.com/file/d/0B67g86jkGQbKcUN0cXVldmVETWs/edit?usp=sharing

Resources I used in case you are interested:

    http://www.pyinstaller.org/ - Software used to make the executable (The executable generated depends on the OS you are using when you run the program)
    http://htmlpreview.github.io/?https://github.com/pyinstaller/pyinstaller/blob/develop/doc/Manual.html (Most updated manual for PyInstaller)



